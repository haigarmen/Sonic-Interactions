#N canvas 678 23 558 456 10;
#X obj 2 297 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 332 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 367 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 94 307 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 94 342 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X msg 172 187 63;
#X msg 212 210 t h i s;
#X msg 202 188 34 45;
#X msg 219 233 or that;
#X obj 2 438 cnv 1 550 1 empty empty empty 0 0 0 4 -262144 -262144
0;
#X obj 2 417 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 303 227 cyclone/spell;
#X text 120 375 1) float;
#X obj 2 5 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 4 graph;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X obj 303 265 print spell;
#X obj 192 263 s \$0-spell;
#X obj 303 186 r \$0-spell;
#X text 120 307 anything;
#X text 140 342 float;
#X text 120 393 2) float;
#X text 178 393 - fill characters in ASCII (default is 32: space character)
;
#X text 178 307 - any message to convert to ascii;
#N canvas 891 50 408 636 example 0;
#X obj 114 201 print spell;
#X msg 114 113 1 2;
#X msg 159 114 a b;
#X obj 114 161 cyclone/spell 4;
#X obj 125 379 print spell;
#X msg 125 291 1 2;
#X msg 170 292 a b;
#X text 22 19 Messages with more than one element will output a space
character in between them (value 32). Below we have a minimum output
size of 4 (1st argument) \, but since the input messages only have
3 elements (counting the space) \, the output is filled with a character
value (32 by default).;
#X obj 125 339 cyclone/spell 4 46;
#X text 25 238 A 2nd argument sets the fill character value to other
than 32 \, below we have "46" which corresponds to "." - a dot character.
;
#X obj 170 514 cyclone/tosymbol;
#X msg 170 477 1.2;
#X obj 170 590 print spell;
#X obj 170 550 cyclone/spell;
#X text 28 418 Since you can't input a float value \, you can use [tosymbol]
to convert a float to a symbol and then send it to the [spell] object.
;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 3 0 0 0;
#X connect 5 0 8 0;
#X connect 6 0 8 0;
#X connect 8 0 4 0;
#X connect 10 0 13 0;
#X connect 11 0 10 0;
#X connect 13 0 12 0;
#X restore 467 265 pd example;
#X floatatom 136 214 5 0 0 0 - - -, f 5;
#X text 93 84 [spell] takes any message and converts each contining
digit and character to UTF-8 (Unicode) values ([spell] doesn't understand
non-integer float messages). The 1st argument sets the minimum output
size. If the input doesn't "spell" to the minimum \, the output is
filled with characters (32 space character by default and specified
by 2nd argumment).;
#X text 178 342 - the ascii representation of each input digit/character
;
#X text 178 375 - minimum output size (default 0 - none);
#X obj 16 5 cyclone/comment 0 37 times ? 0 0 0 0 spell;
#X obj 322 29 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 17 58 cyclone/comment 0 18 times ? 0 0 0 0 Convert input to
ASCII values;
#X obj 363 5 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X connect 5 0 18 0;
#X connect 6 0 18 0;
#X connect 7 0 18 0;
#X connect 8 0 18 0;
#X connect 11 0 17 0;
#X connect 19 0 11 0;
#X connect 26 0 18 0;
