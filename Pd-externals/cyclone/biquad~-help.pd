#N canvas 320 35 563 646 10;
#X obj 95 166 noise~;
#X msg 155 170 0.02635 0 -0.02635 -1.97899 0.982357;
#X obj 3 349 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 3 530 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 78 426 cnv 17 3 17 empty empty 1 5 9 0 16 -228856 -162280 0
;
#X text 146 356 signal;
#X obj 78 539 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 78 358 cnv 17 3 64 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X text 110 428 float/signal;
#X obj 78 445 cnv 17 3 17 empty empty 2 5 9 0 16 -228856 -162280 0
;
#X text 110 445 float/signal;
#X text 155 76 y[0] = a0*x[0] + a1*x[-1] + a2*x[-2] - b1*y[-1] - b2*y[-2]
;
#X text 198 355 - input to filter;
#X text 199 428 - a0 coefficient;
#X text 199 446 - a1 coefficient;
#X obj 78 464 cnv 17 3 17 empty empty 3 5 9 0 16 -228856 -162280 0
;
#X text 110 464 float/signal;
#X obj 78 483 cnv 17 3 17 empty empty 4 5 9 0 16 -228856 -162280 0
;
#X text 110 483 float/signal;
#X obj 78 502 cnv 17 3 17 empty empty 5 5 9 0 16 -228856 -162280 0
;
#X text 110 502 float/signal;
#X text 199 465 - a2 coefficient;
#X text 199 483 - b1 coefficient;
#X text 199 502 - b2 coefficient;
#X obj 3 599 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X obj 3 564 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 95 233 cyclone/biquad~ 0.252176 0 -0.252176 -1.68963 0.72158
;
#X msg 170 200 0.252176 0 -0.252176 -1.68963 0.72158;
#X msg 32 190 clear;
#X text 158 372 list;
#N canvas 360 265 470 194 inconsistencies 0;
#X text 55 16 Inconsistencies to Max/MSP:;
#X text 57 44 - The cyclone version of max's [biquad~] is missing the
ability to get filter values from a "dictionary" \, because we don't
have those implemented (at least yet).;
#X text 57 100 - It also doesn't have a smooth attribute yet \, but
this feature in Max/MSP doesn't seem to be working anyway...;
#X restore 431 317 pd inconsistencies;
#X text 152 405 clear;
#X text 152 388 stoke;
#N canvas 221 38 664 592 stoke 0;
#X floatatom 215 185 5 0 0 0 - - -, f 5;
#X obj 215 204 expr $f1 * 2*pi / sr;
#X text 95 205 radians per sample;
#X floatatom 353 205 5 0 0 0 - - -, f 5;
#X text 386 192 initial phase;
#X text 191 184 Hz;
#X text 394 208 in radians;
#X msg 131 302 clear;
#X obj 215 290 pack;
#X obj 215 237 expr sin($f2 - $f1) \; sin($f2 - 2 * $f1) \; -2 * cos($f1)
;
#X floatatom 332 334 0 0 0 0 - - -;
#X msg 215 335 stoke 0 0 \$1 \$2;
#X obj 215 364 cyclone/biquad~ 0 0 0 0 1;
#X obj 215 157 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#N canvas 0 22 381 197 init 0;
#X obj 177 119 v pi;
#X obj 93 93 samplerate~;
#X obj 93 60 loadbang;
#X obj 93 123 v sr;
#X obj 177 92 expr 4 * atan(1);
#X connect 1 0 3 0;
#X connect 2 0 1 0;
#X connect 2 0 4 0;
#X connect 4 0 0 0;
#X restore 354 257 pd init;
#X text 164 18 The stoke message can be used to artificially set the
delay memory of the previous input/output values (x[-1] \, x[-2] \,
y[-1] & y[-2]). This example uses just the feedback samples (y[-1]
& y[-2]) of the [biquad~] (with no input!) to create an oscillation.
;
#X text 165 92 Note: needs to be stoked AFTER dsp has been started
\, because starting the dsp will reset the sample memory.;
#X obj 288 422 cyclone/scope~ 271 129 2 3 128 -1 1 200 0 0 0 205 229
232 74 79 77 96 98 102 0;
#X obj 172 457 ./out~;
#X connect 0 0 1 0;
#X connect 1 0 9 0;
#X connect 3 0 9 1;
#X connect 7 0 12 0;
#X connect 8 0 11 0;
#X connect 9 0 8 0;
#X connect 9 1 8 1;
#X connect 9 2 10 0;
#X connect 10 0 12 4;
#X connect 11 0 12 0;
#X connect 12 0 17 0;
#X connect 12 0 18 0;
#X connect 12 0 18 1;
#X connect 13 0 0 0;
#X restore 280 319 pd stoke;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#N canvas 438 68 664 329 filter_diagram 0;
#X obj 92 95 cnv 15 260 165 empty empty empty 20 12 0 14 -228856 -66577
0;
#X text 141 110 |;
#X text 141 122 |;
#X text 141 134 |;
#X text 122 148 |;
#X text 164 148 |;
#X text 164 168 |;
#X text 122 168 |;
#X text 125 139 _______;
#X text 125 168 _______;
#X text 141 137 v;
#X text 196 123 |;
#X text 196 134 |;
#X text 196 112 |;
#X text 196 111 ^;
#X text 282 110 |;
#X text 282 122 |;
#X text 282 134 |;
#X text 263 148 |;
#X text 305 148 |;
#X text 305 168 |;
#X text 263 168 |;
#X text 266 139 _______;
#X text 266 168 _______;
#X text 282 137 v;
#X text 227 134 |;
#X text 227 112 |;
#X text 227 123 |;
#X text 227 111 ^;
#X text 303 103 >;
#X text 263 158 | z^-1 |;
#X text 122 158 | z^-1 |;
#X text 141 179 |;
#X text 141 191 |;
#X text 141 203 |;
#X text 122 214 |;
#X text 164 214 |;
#X text 164 234 |;
#X text 122 234 |;
#X text 125 205 _______;
#X text 125 234 _______;
#X text 141 206 v;
#X text 196 197 |;
#X text 196 173 |;
#X text 196 185 |;
#X text 196 172 ^;
#X text 282 179 |;
#X text 282 191 |;
#X text 282 203 |;
#X text 263 214 |;
#X text 305 214 |;
#X text 305 234 |;
#X text 263 234 |;
#X text 266 205 _______;
#X text 266 234 _______;
#X text 282 206 v;
#X text 227 197 |;
#X text 227 173 |;
#X text 227 185 |;
#X text 227 172 ^;
#X text 263 224 | z^-1 |;
#X text 122 224 | z^-1 |;
#X text 183 54 y[0] = a0*x[0] + a1*x[-1] + a2*x[-2] - b1*y[-1] - b2*y[-2]
;
#X text 170 157 -(*a1);
#X text 101 102 x[0] ---(*-a0)-(+)--(+)----------- y[0];
#X text 229 157 (*b1)-;
#X text 170 223 -(*a2);
#X text 229 223 (*b2)-;
#X text 196 145 |;
#X text 227 145 |;
#X text 196 209 |;
#X text 227 209 |;
#X text 388 136 a0 = gain coefficient;
#X text 388 151 a1 = feedforward coefficient 1;
#X text 388 166 a2 = feedforward coefficient 2;
#X text 388 182 b1 = feedback coefficient 1;
#X text 388 196 b2 = feedback coefficient 2;
#X obj 70 53 cyclone/comment 0 16 times ? 0 0 0 0 Filter Equation:
;
#X restore 431 277 pd filter_diagram;
#N canvas 302 197 476 448 clear 0;
#X text 45 27 If the filter explodes by making the feedback coefficients
(b1 and b2) too high \, you can recover (after lowering them of course)
with the clear message. Alternatively \, turning the audio off and
on again also clears the filter memory.;
#X text 47 95 The filter memory are the previous input samples (x[-1]
& x[-2]) and the previous output samples (y[-1] & y[-2]). When cleared
\, their values are resseted to zeroes.;
#X obj 127 267 noise~;
#X msg 61 257 clear;
#X obj 229 223 hsl 128 15 0 1.01 0 0 empty empty empty -2 -8 0 10 -228856
-1 -1 0 1;
#X floatatom 226 254 5 0 0 0 - - -, f 5;
#X obj 226 277 sig~;
#X msg 299 305 \; pd dsp 0 \, dsp 1;
#X text 305 345 also clears;
#X text 305 280 DSP off and on;
#X text 51 160 At your own risk \, try this below:;
#X obj 127 316 cyclone/biquad~ 1;
#X obj 108 357 ./out~;
#X connect 2 0 11 0;
#X connect 3 0 11 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 11 4;
#X connect 6 0 11 5;
#X connect 11 0 12 0;
#X connect 11 0 12 1;
#X restore 280 298 pd clear;
#X text 199 389 - sets previous in/outputs (x[-1] \, x[-2] \, y[-1]
& y[-2]);
#X text 199 538 - filter output;
#X text 145 538 signal;
#X text 198 371 - the gains of the 5 coefficients (a0 \, a1 \, a2 \,
b1 \, b2);
#X text 129 572 1) list - the 5 coefficients' values (defaults to all
zeros);
#N canvas 734 125 427 358 name_clash 0;
#X text 202 202 <= from Pd Vanilla;
#X obj 152 127 cyclone/biquad~;
#X obj 145 202 biquad~;
#X text 35 18 Pd also has a vanilla object named [biquad~]. They are
very similar \, but note the formulas are slightly different.;
#X text 35 254 Other ways to load [biquad~] is with a capital letter
\, either with or without such as:;
#X text 35 59 Cyclone avoids name clashing and overwritting an internal
in Pd Vanilla \, but for that you need to use the cyclone namespace
("cyclone/" before the object name) \, as it's the common practice
for cyclone's documentation. So you create it as:;
#X text 34 165 And still create the vanilla object from vanilla without
namespaces as:;
#X obj 100 306 cyclone/Biquad~;
#X obj 261 306 Biquad~, f 9;
#X text 215 306 and;
#X restore 431 297 pd name_clash;
#X text 199 405 - clears the memory of previous in/outputs;
#X text 153 57 [biquad~] is a 2-pole/2-zero filter that uses the equation:
;
#N canvas 660 242 499 375 signal 0;
#X obj 204 213 cyclone/biquad~;
#X obj 221 172 cyclone/filtercoeff~;
#X obj 138 157 noise~;
#X text 70 35 Different than in vanilla \, [cyclone/biquad~] can take
filter coefficients as audio signals. This is particularly convenient
if you're using [cyclone/filtercoeff~];
#X floatatom 221 130 5 0 0 0 - - -, f 5;
#X obj 185 266 ./out~;
#X connect 0 0 5 0;
#X connect 0 0 5 1;
#X connect 1 0 0 1;
#X connect 1 1 0 2;
#X connect 1 2 0 3;
#X connect 1 3 0 4;
#X connect 1 4 0 5;
#X connect 2 0 0 0;
#X connect 4 0 1 0;
#X restore 280 277 pd signal coefficients;
#X text 154 97 Note it's a different equation than in Pd Vanilla's
[biquad~]. You can specify the coefficients a0 \, a1 \, a2 \, b1 \,
and b2 as a list (also note the different order format than in Pd)
or individually as signals or floats.;
#X obj 16 4 cyclone/comment 0 37 times ? 0 0 0 0 biquad~;
#X obj 322 28 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 363 4 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X obj 21 56 cyclone/comment 0 18 times ? 0 0 0 0 Biquad filter;
#X obj 95 273 ./out~;
#X connect 0 0 26 0;
#X connect 1 0 26 0;
#X connect 26 0 54 0;
#X connect 26 0 54 1;
#X connect 27 0 26 0;
#X connect 28 0 26 0;
