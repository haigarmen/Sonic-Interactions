#N canvas 715 36 558 524 10;
#X obj 3 336 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 400 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 437 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 84 410 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 84 344 cnv 17 3 50 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X msg 230 190 clear;
#X msg 231 211 reset;
#X msg 128 176 1;
#X msg 157 176 2;
#X msg 186 176 3;
#X obj 2 485 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X text 117 343 float;
#X text 100 446 1) float, f 9;
#X obj 2 4 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 3 graph;
#X obj 305 4 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 3 pd;
#X obj 186 266 unpack float float float;
#X obj 186 236 cyclone/anal 32;
#X text 117 360 clear;
#X text 166 360 - clears all received numbers, f 60;
#X text 117 377 reset;
#X text 166 377 - removes the last two recevied numbers, f 60;
#X text 174 307 previous;
#X text 325 307 occurrence;
#X obj 223 170 nbx 4 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 186 291 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 256 291 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 327 291 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 250 307 current;
#X text 123 411 list;
#X text 166 343 - the anal input data, f 60;
#N canvas 797 151 449 338 examples 0;
#X obj 189 84 notein;
#X obj 189 114 stripnote;
#X obj 210 179 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 189 151 cyclone/anal;
#X obj 189 203 cyclone/prob;
#C restore;
#N canvas 287 125 430 593 markov_chain 0;
#X obj 286 130 bng 20 250 50 0 empty empty empty 17 7 0 10 -216373
-66577 -1;
#X msg 286 263 clear;
#X obj 286 349 cyclone/prob;
#C restore;
#X obj 172 312 cyclone/anal 16384;
#X obj 172 354 unpack f f f, f 13;
#X floatatom 172 376 5 0 0 0 - - -, f 5;
#X floatatom 209 376 5 0 0 0 - - -, f 5;
#X floatatom 247 376 3 0 0 0 - - -, f 3;
#X obj 317 297 bng 25 250 50 0 empty empty empty 17 7 0 10 -216373
-66577 -1;
#X obj 355 382 bng 15 250 50 0 empty empty empty 17 7 0 10 -216373
-66577 -1;
#X obj 286 401 % 128;
#X obj 286 485 noteout;
#X obj 145 151 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 286 426 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 286 449 makenote 100 500;
#X text 19 14 By default \, [anal] creates a table of transition probabilities
from one note to another (1st order Markov chain). This patch shows
how we can use it to create transition probabilities from two notes
to a third note (2nd order markov chain)., f 65;
#X obj 145 181 t f f;
#X obj 172 249 +;
#X msg 187 176 0;
#X obj 187 218 << 7;
#X obj 172 274 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X obj 145 90 notein;
#X obj 145 121 stripnote;
#X obj 286 375 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 314 132 <= restart;
#X obj 118 405 cyclone/comment 170 11 helvetica ? 0 0 0 0 weed out
the "previous" note that was stored in the high 7-bits;
#X obj 68 251 cyclone/comment 101 11 helvetica ? 0 0 0 0 encode current
and previous values into one big number;
#X obj 27 304 cyclone/comment 139 11 helvetica ? 0 0 0 0 max size =
16384 (128*128) because we're shoving 2 MIDI values into 1;
#X obj 19 355 cyclone/comment 169 11 helvetica ? 0 0 0 0 output: transitions
from 2-note pairs to other 2-note pairs;
#X text 350 303 <= BANG;
#X obj 39 215 cyclone/comment 130 11 helvetica ? 0 0 0 0 store previous
note in the high 7-bits of our value;
#X obj 38 447 cyclone/comment 250 11 helvetica ? 0 0 0 0 Now the playback
is comprised of transition probabilities based on the two preceeding
notes! This should yield results that sound less random than if we're
just looking at one note at a time.;
#X connect 0 0 18 0;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 0 3 0;
#X connect 2 0 23 0;
#X connect 2 1 9 0;
#X connect 3 0 2 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 4 1 6 0;
#X connect 4 2 7 0;
#X connect 8 0 2 0;
#X connect 10 0 13 0;
#X connect 12 0 16 0;
#X connect 13 0 14 0;
#X connect 14 0 11 0;
#X connect 14 1 11 1;
#X connect 16 0 19 0;
#X connect 16 1 17 0;
#X connect 17 0 20 0;
#X connect 18 0 19 0;
#X connect 19 0 17 1;
#X connect 20 0 3 0;
#X connect 21 0 22 0;
#X connect 21 1 22 1;
#X connect 22 0 12 0;
#X connect 23 0 10 0;
#X restore 139 264 pd markov_chain (2nd order);
#X text 34 33 feed the received two note sequences to [prob] for a
1st order markov-chain;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 4 0;
#X connect 3 0 4 0;
#X restore 451 290 pd examples;
#X text 168 446 - the maximum input - the value is clipped between
0 and this number (default 128 \, max 16384);
#X text 81 85 [anal] reports how many times it received a number pair.
The output is designed to serve as input to [cyclone/prob] and is composed
of: 1) the previously received number \, 2) current input number \,
3) occurence (how many times this number pair has been received).;
#X text 166 412 - three floats: <previous number \, current number
\, occurence>;
#X obj 322 28 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 16 4 cyclone/comment 0 37 times ? 0 0 0 0 anal;
#X obj 17 56 cyclone/comment 0 18 times ? 0 0 0 0 Number pairs histogram
;
#X obj 363 4 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X connect 5 0 18 0;
#X connect 6 0 18 0;
#X connect 7 0 18 0;
#X connect 8 0 18 0;
#X connect 9 0 18 0;
#X connect 17 0 26 0;
#X connect 17 1 27 0;
#X connect 17 2 28 0;
#X connect 18 0 17 0;
#X connect 25 0 18 0;
